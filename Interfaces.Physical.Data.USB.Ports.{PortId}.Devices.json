{
  "paths": {
    "Get": {
      "operationId": "GetInterfaces.Physical.Data.USB.Ports.{PortId}.Devices.{DeviceId}",
      "summary": "Retrieves the status and configuration parameters in regards to the (specified) USB Device.",
      "tags": [
        "Interfaces.Physical.Data.USB.Ports.{PortId}.Devices.{DeviceId}"
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ListRequest"
            },
            "example": ""
          }
        }
      },
      "responses": {
        "99": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": \"0\", \"Name\": \"External HD\", \"Device\": {\"Number\": 2, \"Class\": \"0x00\", \"SubClass\": \"0x00\", \"Version\": \"2\", \"Protocol\": \"0x00\"}, \"Product\": {\"VendorId\": 2, \"Class\": \"Storage\", \"Manufacturer\": \"prplFoundation\", \"SerialNumber\": \"ABC123\"}, \"USB\": {\"Version\": \"3.0\", \"Rate\": \"Super\"}}}",
              "schema": {
                "$ref": "#/components/schemas/Interfaces.Physical.Data.USB.Ports.{PortId}.Devices"
              }
            }
          },
          "description": "A well-formed call was performed to a valid object with valid arguments."
        },
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request."
        },
        "ARGUMENT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request."
        },
        "METHOD_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request."
        },
        "OBJECT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request."
        },
        "OK": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window."
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress."
        },
        "OPERATION_ERROR": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error."
        },
        "OPERATION_ILLEGAL": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order."
        },
        "OPERATION_PERMISSION_DENIED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request."
        },
        "OPERATION_TIMEOUT": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame."
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "PortId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) Port",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        },
        {
          "in": "path",
          "name": "DeviceId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) Device",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "ListRequest": {
        "properties": {
          "Limit": {
            "description": "How many items to return at one time (max 200)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20,
              "example": {
                "Limit": 10
              }
            }
          },
          "Offset": {
            "description": "Which object index to start with",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": {
                "Offset": 45
              }
            }
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "name"
        ],
        "properties": {
          "header": {
            "properties": {
              "code": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "Interfaces.Physical.Data.USB.Ports.{PortId}.Devices": {
        "description": "Interfaces.Physical.Data.USB.Ports.{PortId}.Devices Object",
        "id": "Interfaces.Physical.Data.USB.Ports.{PortId}.Devices",
        "type": "object",
        "required": [],
        "properties": {
          "Device": {
            "type": "object",
            "properties": {
              "Class": {
                "type": "String",
                "description": "USB Device class code as assigned by USB-IF.",
                "format": "0xXX",
                "default_value": "-",
                "possible_values": "hex code.",
                "readOnly": true
              },
              "Number": {
                "type": "Integer",
                "description": "USB Device number on bus.",
                "format": "-",
                "default_value": "-",
                "possible_values": ">= 0",
                "readOnly": true
              },
              "Protocol": {
                "type": "String",
                "description": "USB Device protocol code (assigned by USB-IF).",
                "format": "0xXX",
                "default_value": "-",
                "possible_values": "-",
                "readOnly": true
              },
              "SubClass": {
                "type": "String",
                "description": "USB Device subclass code (assigned by USB-IF).",
                "format": "0xXX",
                "default_value": "-",
                "possible_values": "hex code.",
                "readOnly": true
              },
              "Version": {
                "type": "Integer",
                "description": "USB Device device version.",
                "format": "-",
                "default_value": "-",
                "possible_values": "-",
                "readOnly": true
              }
            },
            "required": []
          },
          "Id": {
            "type": "String",
            "description": "USB Device unique identifier.",
            "format": "-",
            "default_value": "-",
            "possible_values": "any string with length from 1 up to 64 chars",
            "readOnly": true
          },
          "Name": {
            "type": "String",
            "description": "USB Device name (alias).",
            "format": "-",
            "default_value": "-",
            "possible_values": "any string with length from 1 up to 64 chars",
            "readOnly": true
          },
          "Product": {
            "type": "object",
            "properties": {
              "Class": {
                "type": "String",
                "description": "USB Device product class descriptor.",
                "format": "-",
                "default_value": "-",
                "possible_values": "any string with length from 1 up to 64 chars",
                "readOnly": true
              },
              "Manufacturer": {
                "type": "String",
                "description": "USB Device product manufacturer.",
                "format": "-",
                "default_value": "-",
                "possible_values": "any string with length from 1 up to 64 chars",
                "readOnly": true
              },
              "SerialNumber": {
                "type": "String",
                "description": "USB Device product serial number.",
                "format": "-",
                "default_value": "-",
                "possible_values": "any string with length from 1 up to 64 chars",
                "readOnly": true
              },
              "VendorId": {
                "type": "Integer",
                "description": "USB Device vendor identifier (assigned by USB-IF).",
                "format": "-",
                "default_value": "-",
                "possible_values": "-",
                "readOnly": true
              }
            },
            "required": []
          },
          "USB": {
            "type": "object",
            "properties": {
              "Rate": {
                "type": "String",
                "description": "USB Device speed.",
                "format": "-",
                "default_value": "-",
                "possible_values": "\"Low\" (1.5 Mbps), \"Full\" (12 Mbps), \"High\" (480 Mbps), \"Super\" (5 Gbps).",
                "readOnly": true
              },
              "Version": {
                "type": "String",
                "description": "USB Device version specification with which the device complies. Example: \"1.1\".",
                "format": "-",
                "default_value": "-",
                "possible_values": "\"1.1\", \"2.0\", \"3.0\" or \"3.1\"",
                "enum": [
                  "1.1, 2.0, 3.0",
                  "3.1"
                ],
                "readOnly": true
              }
            },
            "required": []
          }
        },
        "events": {},
        "example": {}
      }
    }
  }
}