{
  "paths": {
    "Get": {
      "operationId": "GetServices.Local.DNS.Dynamic",
      "summary": "Retrieves the status and configuration parameters in regards to the (specified) Dynamic DNS.",
      "tags": [
        "Services.Local.DNS.Dynamic"
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ListRequest"
            },
            "example": ""
          }
        }
      },
      "responses": {
        "99": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Enabled\": true, \"RenewInterval\": 3600, \"AdvertisePublicAddress\": false}}",
              "schema": {
                "$ref": "#/components/schemas/Services.Local.DNS.Dynamic"
              }
            }
          },
          "description": "A well-formed call was performed to a valid object with valid arguments."
        },
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request."
        },
        "ARGUMENT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request."
        },
        "METHOD_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request."
        },
        "OBJECT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request."
        },
        "OK": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window."
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress."
        },
        "OPERATION_ERROR": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error."
        },
        "OPERATION_ILLEGAL": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order."
        },
        "OPERATION_PERMISSION_DENIED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request."
        },
        "OPERATION_TIMEOUT": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame."
        }
      }
    },
    "Set": {
      "operationId": "SetServices.Local.DNS.Dynamic",
      "summary": "Modifies the status and configuration parameters of the (specified) Dynamic DNS.",
      "tags": [
        "Services.Local.DNS.Dynamic"
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ListRequest"
            },
            "example": "{\"Enabled\": true, \"RenewInterval\": 3600, \"AdvertisePublicAddress\": false}"
          }
        }
      },
      "responses": {
        "99": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}}",
              "schema": {
                "$ref": "#/components/schemas/Services.Local.DNS.Dynamic"
              }
            }
          },
          "description": "A well-formed call was performed to a valid object with valid arguments."
        },
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request."
        },
        "ARGUMENT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request."
        },
        "METHOD_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request."
        },
        "OBJECT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request."
        },
        "OK": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window."
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress."
        },
        "OPERATION_ERROR": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error."
        },
        "OPERATION_ILLEGAL": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order."
        },
        "OPERATION_PERMISSION_DENIED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request."
        },
        "OPERATION_TIMEOUT": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame."
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ListRequest": {
        "properties": {
          "Limit": {
            "description": "How many items to return at one time (max 200)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20,
              "example": {
                "Limit": 10
              }
            }
          },
          "Offset": {
            "description": "Which object index to start with",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": {
                "Offset": 45
              }
            }
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "name"
        ],
        "properties": {
          "header": {
            "properties": {
              "code": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "Services.Local.DNS.Dynamic": {
        "description": "Services.Local.DNS.Dynamic Object",
        "id": "Services.Local.DNS.Dynamic",
        "type": "object",
        "required": [],
        "properties": {
          "AdvertisePublicAddress": {
            "type": "Boolean",
            "description": "Dynamic DNS advertised public address.",
            "format": "-",
            "default_value": "-",
            "possible_values": ":\n- \"true\" (if the gateway has a public wan IP address, then it advertises this address, otherwise it finds out what it the public address of the CG-NAT and reports back that one).\n- \"false\", (advertises the WAN public IP address, despite having either a public or private address, e.g.: CG-NAT)"
          },
          "Enabled": {
            "type": "Boolean",
            "description": "Dynamic DNS administrative status.",
            "format": "-",
            "default_value": "-",
            "possible_values": "\"true\" or \"false\"",
            "enum": [
              "true",
              "false"
            ]
          },
          "RenewInterval": {
            "type": "Integer",
            "description": "Dynamic DNS renew interval.",
            "format": "expressed in seconds",
            "default_value": "-",
            "possible_values": ">= 60"
          }
        },
        "events": {
          "1": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 1, \"Name\": \"SERVICES_LOCAL_DNS_DYNAMIC_ENABLED\"}}"
              }
            },
            "description": "Raised when an existing Dynamic DNS is enabled.",
            "code": "SERVICES_LOCAL_DNS_DYNAMIC_ENABLED"
          },
          "2": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 2, \"Name\": \"SERVICES_LOCAL_DNS_DYNAMIC_DISABLED\"}}"
              }
            },
            "description": "Raised when an existing Dynamic DNS is disabled.",
            "code": "SERVICES_LOCAL_DNS_DYNAMIC_DISABLED"
          },
          "3": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 3, \"Name\": \"SERVICES_LOCAL_DNS_DYNAMIC_PROVIDER_ENABLED\"}, \"Body\": {\"ProviderId\": \"Services.Local.DNS.Dynamic.Providers.0\"}}"
              }
            },
            "description": "Raised when an existing Dynamic DNS Provider is enabled.",
            "code": "SERVICES_LOCAL_DNS_DYNAMIC_PROVIDER_ENABLED"
          },
          "4": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 4, \"Name\": \"SERVICES_LOCAL_DNS_DYNAMIC_PROVIDER_DISABLED\"}, \"Body\": {\"ProviderId\": \"Services.Local.DNS.Dynamic.Providers.0\"}}"
              }
            },
            "description": "Raised when an existing Dynamic DNS Provider is disabled.",
            "code": "SERVICES_LOCAL_DNS_DYNAMIC_PROVIDER_DISABLED"
          },
          "5": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 5, \"Name\": \"SERVICES_LOCAL_DNS_DYNAMIC_PROVIDER_MODIFIED\"}, \"Body\": {\"ProviderId\": \"Services.Local.DNS.Dynamic.Providers.0\"}}"
              }
            },
            "description": "Raised when an existing Dynamic DNS Provider configuration is modified.",
            "code": "SERVICES_LOCAL_DNS_DYNAMIC_PROVIDER_MODIFIED"
          },
          "6": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 6, \"Name\": \"SERVICES_LOCAL_DNS_DYNAMIC_HOSTNAME_ADDED\"}, \"Body\": {\"ProviderId\": \"Services.Local.DNS.Dynamic.Providers.0\", \"HostnameId\": \"Services.Local.DNS.Dynamic.Providers.0.Hostnames.0\"}}"
              }
            },
            "description": "Raised when a Dynamic DNS Hostname is added.",
            "code": "SERVICES_LOCAL_DNS_DYNAMIC_HOSTNAME_ADDED"
          },
          "7": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 7, \"Name\": \"SERVICES_LOCAL_DNS_DYNAMIC_HOSTNAME_MODIFIED\"}, \"Body\": {\"ProviderId\": \"Services.Local.DNS.Dynamic.Providers.0\", \"HostnameId\": \"Services.Local.DNS.Dynamic.Providers.0.Hostnames.0\"}}"
              }
            },
            "description": "Raised when a Dynamic DNS Hostname is modified.",
            "code": "SERVICES_LOCAL_DNS_DYNAMIC_HOSTNAME_MODIFIED"
          },
          "8": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 8, \"Name\": \"SERVICES_LOCAL_DNS_DYNAMIC_HOSTNAME_DELETED\"}, \"Body\": {\"ProviderId\": \"Services.Local.DNS.Dynamic.Providers.0\", \"HostnameId\": \"Services.Local.DNS.Dynamic.Providers.0.Hostnames.0\"}}"
              }
            },
            "description": "Raised when a Dynamic DNS Hostname is deleted.",
            "code": "SERVICES_LOCAL_DNS_DYNAMIC_HOSTNAME_DELETED"
          },
          "9": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 9, \"Name\": \"SERVICES_LOCAL_DNS_DYNAMIC_HOSTNAME_UPDATE_PERIODIC\"}, \"Body\": {\"ProviderId\": \"Services.Local.DNS.Dynamic.Providers.0\", \"HostnameId\": \"Services.Local.DNS.Dynamic.Providers.0.Hostnames.0\"}}"
              }
            },
            "description": "Raised when a Dynamic DNS Hostname is updated periodicaly.",
            "code": "SERVICES_LOCAL_DNS_DYNAMIC_HOSTNAME_UPDATE_PERIODIC"
          },
          "10": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 10, \"Name\": \"SERVICES_LOCAL_DNS_DYNAMIC_HOSTNAME_UPDATE_IP_CHANGE\"}, \"Body\": {\"ProviderId\": \"Services.Local.DNS.Dynamic.Providers.0\", \"HostnameId\": \"Services.Local.DNS.Dynamic.Providers.0.Hostnames.0\"}}"
              }
            },
            "description": "Raised when a Dynamic DNS Hostname is updated due to IP change.",
            "code": "SERVICES_LOCAL_DNS_DYNAMIC_HOSTNAME_UPDATE_IP_CHANGE"
          },
          "11": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 11, \"Name\": \"SERVICES_LOCAL_DNS_DYNAMIC_HOSTNAME_UPDATE_FAILED\"}, \"Body\": {\"ProviderId\": \"Services.Local.DNS.Dynamic.Providers.0\", \"HostnameId\": \"Services.Local.DNS.Dynamic.Providers.0.Hostnames.0\"}}"
              }
            },
            "description": "Raised when a Dynamic DNS Hostname updated failed.",
            "code": "SERVICES_LOCAL_DNS_DYNAMIC_HOSTNAME_UPDATE_FAILED"
          }
        },
        "example": {}
      }
    }
  }
}