{
  "paths": {
    "Get": {
      "operationId": "GetInterfaces.Physical.Voice.FXS.{InterfaceId}",
      "summary": "Retrieves the status and configuration parameters in regards to the (specified) FXS Voice Interface.",
      "tags": [
        "Interfaces.Physical.Voice.FXS.{InterfaceId}"
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ListRequest"
            },
            "example": ""
          }
        }
      },
      "responses": {
        "99": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": \"0\", \"Name\": \"FXS1\", \"Enabled\": true, \"Status\": \"Active\", \"Signaling\": \"DTMF\"}}",
              "schema": {
                "$ref": "#/components/schemas/Interfaces.Physical.Voice.FXS"
              }
            }
          },
          "description": "A well-formed call was performed to a valid object with valid arguments."
        },
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request."
        },
        "ARGUMENT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request."
        },
        "METHOD_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request."
        },
        "OBJECT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request."
        },
        "OK": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window."
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress."
        },
        "OPERATION_ERROR": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error."
        },
        "OPERATION_ILLEGAL": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order."
        },
        "OPERATION_PERMISSION_DENIED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request."
        },
        "OPERATION_TIMEOUT": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame."
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "InterfaceId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) Interface",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        }
      ]
    },
    "Set": {
      "operationId": "SetInterfaces.Physical.Voice.FXS.{InterfaceId}",
      "summary": "Modifies the status and configuration parameters of the (specified) FXS Voice Interface.",
      "tags": [
        "Interfaces.Physical.Voice.FXS.{InterfaceId}"
      ],
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ListRequest"
            },
            "example": "{\"Enabled\": true, \"Signaling\": \"DTMF\"}"
          }
        }
      },
      "responses": {
        "99": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}}",
              "schema": {
                "$ref": "#/components/schemas/Interfaces.Physical.Voice.FXS"
              }
            }
          },
          "description": "A well-formed call was performed to a valid object with valid arguments."
        },
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request."
        },
        "ARGUMENT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request."
        },
        "METHOD_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request."
        },
        "OBJECT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request."
        },
        "OK": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window."
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress."
        },
        "OPERATION_ERROR": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error."
        },
        "OPERATION_ILLEGAL": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order."
        },
        "OPERATION_PERMISSION_DENIED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request."
        },
        "OPERATION_TIMEOUT": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame."
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "InterfaceId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) Interface",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "ListRequest": {
        "properties": {
          "Limit": {
            "description": "How many items to return at one time (max 200)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20,
              "example": {
                "Limit": 10
              }
            }
          },
          "Offset": {
            "description": "Which object index to start with",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": {
                "Offset": 45
              }
            }
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "name"
        ],
        "properties": {
          "header": {
            "properties": {
              "code": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "Interfaces.Physical.Voice.FXS": {
        "description": "Interfaces.Physical.Voice.FXS Object",
        "id": "Interfaces.Physical.Voice.FXS",
        "type": "object",
        "required": [],
        "properties": {
          "Enabled": {
            "type": "Boolean",
            "description": "FXS Voice Interface administrative status.",
            "format": "-",
            "default_value": "-",
            "possible_values": "\"true\" or \"false\"",
            "enum": [
              "true",
              "false"
            ]
          },
          "Id": {
            "type": "String",
            "description": "FXS Voice Interface unique identifier.",
            "format": "1 up to 64 chars",
            "default_value": "-",
            "possible_values": "any string with length from 1 up to 64 chars",
            "readOnly": true
          },
          "Name": {
            "type": "String",
            "description": "FXS Voice Interface name (alias).",
            "format": "-",
            "default_value": "-",
            "possible_values": "any string with length from 1 up to 64 chars",
            "readOnly": true
          },
          "Signaling": {
            "type": "String",
            "description": "FXS Voice Interface signaling mode.",
            "format": "-",
            "default_value": "-",
            "possible_values": "\"DTMF\" or \"PulseDialing\"",
            "enum": [
              "DTMF",
              "PulseDialing"
            ]
          },
          "Status": {
            "type": "String",
            "description": "FXS Voice Interface operational status.",
            "format": "-",
            "default_value": "-",
            "possible_values": "\"Connected\", \"Disconnected\", \"Disabled\", \"Error\"",
            "readOnly": true
          }
        },
        "events": {
          "1": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 1, \"Name\": \"INTERFACES_PHYSICAL_VOICE_FXS_DEVICE_CONNECTED\"}, \"Body\": {\"InterfaceId\": \"Interfaces.Physical.Voice.FXS.{InterfaceId}\"}}"
              }
            },
            "description": "Raised when the FXS Voice Interface is connected to a device.",
            "code": "INTERFACES_PHYSICAL_VOICE_FXS_DEVICE_CONNECTED"
          },
          "2": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 2, \"Name\": \"INTERFACES_PHYSICAL_VOICE_FXS_DEVICE_DISCONNECTED\"}, \"Body\": {\"InterfaceId\": \"Interfaces.Physical.Voice.FXS.{InterfaceId}\"}}"
              }
            },
            "description": "Raised when the FXS Voice Interface is disconnected from a device.",
            "code": "INTERFACES_PHYSICAL_VOICE_FXS_DEVICE_DISCONNECTED"
          },
          "3": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 3, \"Name\": \"INTERFACES_PHYSICAL_VOICE_FXS_PORT_DISABLED\"}, \"Body\": {\"InterfaceId\": \"Interfaces.Physical.Voice.FXS.{InterfaceId}\"}}"
              }
            },
            "description": "Raised when a FXS Voice Interface Port is disabled.",
            "code": "INTERFACES_PHYSICAL_VOICE_FXS_PORT_DISABLED"
          },
          "4": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 4, \"Name\": \"INTERFACES_PHYSICAL_VOICE_FXS_PORT_ENABLED\"}, \"Body\": {\"InterfaceId\": \"Interfaces.Physical.Voice.FXS.{InterfaceId}\"}}"
              }
            },
            "description": "Raised when a FXS Voice Interface Port is enabled.",
            "code": "INTERFACES_PHYSICAL_VOICE_FXS_PORT_ENABLED"
          }
        },
        "example": {}
      }
    }
  }
}