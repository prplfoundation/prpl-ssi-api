{
  "paths": {
    "Add": {
      "operationId": "AddUser.Certificates",
      "summary": "Adds a new User Certificate.",
      "tags": [
        "User.Certificates"
      ],
      "responses": {
        "99": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": \"1\"}}",
              "schema": {
                "$ref": "#/components/schemas/User.Certificates"
              }
            }
          },
          "description": "A well-formed call was performed to a valid object with valid arguments."
        },
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request."
        },
        "ARGUMENT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request."
        },
        "METHOD_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request."
        },
        "OBJECT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request."
        },
        "OK": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window."
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress."
        },
        "OPERATION_ERROR": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error."
        },
        "OPERATION_ILLEGAL": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order."
        },
        "OPERATION_PERMISSION_DENIED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request."
        },
        "OPERATION_TIMEOUT": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame."
        }
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User.Certificates"
            },
            "example": "{\"Id\": \"1\", \"Name\": \"iPhone-App\", \"Enabled\": true, \"Issuer\": {\"CommonName\": \"prpl Foundation Authority\", \"Organization\": \"prpl Foundation\", \"Country\": \"DE\"}, \"Subject\": {\"CommonName\": \"*.iphone.lan\", \"Organization\": \"prpl Foundation\", \"Country\": \"DE\"}, \"Valid\": {\"From\": \"date\", \"To\": \"date\"}, \"SerialNumber\": \"\\u200e53d3afc6729cbfce\", \"PublicKey\": {\"Encoding\": \"Base64\", \"Type\": \"MD5\", \"Hash\": \"2a6571da26602a67be14ea8c5ab82349\"}, \"RoleId\": \"User.Roles.CLI:Admin\", \"Locale\": \"en-GB\"}"
          }
        }
      }
    },
    "List": {
      "operationId": "ListUser.Certificates",
      "summary": "Retrieves a list of User Certificates.",
      "tags": [
        "User.Certificates"
      ],
      "responses": {
        "99": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"List\": [{\"Id\": \"1\", \"Name\": \"iPhone-App\", \"Enabled\": true, \"Status\": \"Pending\", \"Issuer\": {\"CommonName\": \"prpl Foundation Authority\", \"Organization\": \"prpl Foundation\", \"Country\": \"DE\"}, \"Subject\": {\"CommonName\": \"*.iphone.lan\", \"Organization\": \"prpl Foundation\", \"Country\": \"DE\"}, \"Valid\": {\"From\": \"date\", \"To\": \"date\"}, \"SerialNumber\": \"\\u200e53d3afc6729cbfce\", \"PublicKey\": {\"Encoding\": \"Base64\", \"Type\": \"MD5\", \"Hash\": \"2a6571da26602a67be14ea8c5ab82349\"}, \"Timestamp\": {\"Installed\": \"2018-04-09T20:45:00+01:00\", \"LastUsed\": \"2018-04-09T20:45:00+01:00\"}, \"RoleId\": \"User.Roles.CLI:Admin\", \"Locale\": \"en-GB\"}], \"Limit\": 10, \"Offset\": 0}}",
              "schema": {
                "$ref": "#/components/schemas/User.Certificates"
              }
            }
          },
          "description": "A well-formed call was performed to a valid object with valid arguments."
        },
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request."
        },
        "ARGUMENT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request."
        },
        "METHOD_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request."
        },
        "OBJECT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request."
        },
        "OK": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window."
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress."
        },
        "OPERATION_ERROR": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error."
        },
        "OPERATION_ILLEGAL": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order."
        },
        "OPERATION_PERMISSION_DENIED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request."
        },
        "OPERATION_TIMEOUT": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame."
        }
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ListRequest"
            },
            "example": "{\"Limit\": 10, \"Offset\": 0}"
          }
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Which object index to start with",
            "example": 45,
            "default": 0
          },
          "limit": {
            "type": "integer",
            "description": "How many objects to return",
            "min": 1,
            "max": 200,
            "default": 20
          }
        }
      }
    },
    "Delete": {
      "operationId": "DeleteUser.Certificates.{CertificateId}",
      "summary": "Deletes the specified User Certificate.",
      "tags": [
        "User.Certificates.{CertificateId}"
      ],
      "responses": {
        "99": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}}",
              "schema": {
                "$ref": "#/components/schemas/User.Certificates"
              }
            }
          },
          "description": "A well-formed call was performed to a valid object with valid arguments."
        },
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request."
        },
        "ARGUMENT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request."
        },
        "METHOD_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request."
        },
        "OBJECT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request."
        },
        "OK": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window."
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress."
        },
        "OPERATION_ERROR": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error."
        },
        "OPERATION_ILLEGAL": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order."
        },
        "OPERATION_PERMISSION_DENIED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request."
        },
        "OPERATION_TIMEOUT": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame."
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "CertificateId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) Certificate",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        }
      ]
    },
    "Get": {
      "operationId": "GetUser.Certificates.{CertificateId}",
      "summary": "Retrieves the status and configuration parameters in regards to the (specified) User Certificate.",
      "tags": [
        "User.Certificates.{CertificateId}"
      ],
      "responses": {
        "99": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": \"1\", \"Name\": \"iPhone-App\", \"Enabled\": true, \"Status\": \"Pending\", \"Issuer\": {\"CommonName\": \"prpl Foundation Authority\", \"Organization\": \"prpl Foundation\", \"Country\": \"DE\"}, \"Subject\": {\"CommonName\": \"*.iphone.lan\", \"Organization\": \"prpl Foundation\", \"Country\": \"DE\"}, \"Valid\": {\"From\": \"date\", \"To\": \"date\"}, \"SerialNumber\": \"\\u200e53d3afc6729cbfce\", \"PublicKey\": {\"Encoding\": \"Base64\", \"Type\": \"MD5\", \"Hash\": \"2a6571da26602a67be14ea8c5ab82349\"}, \"Timestamp\": {\"Installed\": \"2018-04-09T20:45:00+01:00\", \"LastUsed\": \"2018-04-09T20:45:00+01:00\"}, \"RoleId\": \"User.Roles.CLI:Admin\", \"Locale\": \"en-GB\"}}",
              "schema": {
                "$ref": "#/components/schemas/User.Certificates"
              }
            }
          },
          "description": "A well-formed call was performed to a valid object with valid arguments."
        },
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request."
        },
        "ARGUMENT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request."
        },
        "METHOD_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request."
        },
        "OBJECT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request."
        },
        "OK": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window."
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress."
        },
        "OPERATION_ERROR": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error."
        },
        "OPERATION_ILLEGAL": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order."
        },
        "OPERATION_PERMISSION_DENIED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request."
        },
        "OPERATION_TIMEOUT": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame."
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "CertificateId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) Certificate",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        }
      ]
    },
    "Set": {
      "operationId": "SetUser.Certificates.{CertificateId}",
      "summary": "Modifies the status and configuration parameters of the (specified) User Certificate.",
      "tags": [
        "User.Certificates.{CertificateId}"
      ],
      "responses": {
        "99": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}}",
              "schema": {
                "$ref": "#/components/schemas/User.Certificates"
              }
            }
          },
          "description": "A well-formed call was performed to a valid object with valid arguments."
        },
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request."
        },
        "ARGUMENT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request."
        },
        "METHOD_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request."
        },
        "OBJECT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request."
        },
        "OK": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window."
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress."
        },
        "OPERATION_ERROR": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error."
        },
        "OPERATION_ILLEGAL": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order."
        },
        "OPERATION_PERMISSION_DENIED": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request."
        },
        "OPERATION_TIMEOUT": {
          "content": {
            "application/json": {
              "example": "",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame."
        }
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User.Certificates"
            },
            "example": "{\"Name\": \"iPhone-App\", \"Enabled\": true, \"Timestamp\": {\"LastUsed\": \"2018-04-09T20:45:00+01:00\"}, \"Locale\": \"en-GB\"}"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "CertificateId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) Certificate",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "ListRequest": {
        "properties": {
          "Limit": {
            "description": "How many items to return at one time (max 200)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20,
              "example": {
                "Limit": 10
              }
            }
          },
          "Offset": {
            "description": "Which object index to start with",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": {
                "Offset": 45
              }
            }
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "name"
        ],
        "properties": {
          "header": {
            "properties": {
              "code": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "User.Certificates": {
        "description": "User.Certificates Object",
        "id": "User.Certificates",
        "type": "object",
        "required": [
          "RoleId",
          "SerialNumber"
        ],
        "properties": {
          "Enabled": {
            "type": "Boolean",
            "description": "User Certificate administrative status.",
            "format": "-",
            "default_value": "false",
            "possible_values": "true or false",
            "enum": [
              "true",
              "false"
            ]
          },
          "Id": {
            "type": "String",
            "description": "User Certificate unique identifier.",
            "format": "-",
            "default_value": "Integer starting at 0",
            "possible_values": "-"
          },
          "Issuer": {
            "type": "object",
            "properties": {
              "CommonName": {
                "type": "String",
                "description": "User Certificate issuer common name",
                "format": "-",
                "default_value": "-",
                "possible_values": "-"
              },
              "Country": {
                "type": "String",
                "description": "User Certificate issuer country",
                "format": "-",
                "default_value": "-",
                "possible_values": "-"
              },
              "Organization": {
                "type": "String",
                "description": "User Certificate issuer organization",
                "format": "-",
                "default_value": "-",
                "possible_values": "-"
              }
            },
            "required": [
              "CommonName",
              "Country",
              "Organization"
            ]
          },
          "Locale": {
            "type": "String",
            "description": "User Certificate language/locale.",
            "format": "lc-CC (lc = language code, CC = country code)",
            "default_value": "same locale as defined on User.Profile",
            "possible_values": "any ISO-639-1 language code and any ISO-3166-Alpha-2 country code"
          },
          "Name": {
            "type": "String",
            "description": "User Certificate name (alias).",
            "format": "-",
            "default_value": "same value as Id",
            "possible_values": "-"
          },
          "PublicKey": {
            "type": "object",
            "properties": {
              "Encoding": {
                "type": "String",
                "description": "User Certificate public key encoding",
                "format": "-",
                "default_value": "-",
                "possible_values": "Base64"
              },
              "Hash": {
                "type": "String",
                "description": "User Certificate public key hash",
                "format": "-",
                "default_value": "-",
                "possible_values": "-"
              },
              "Type": {
                "type": "String",
                "description": "User Certificate public key type",
                "format": "-",
                "default_value": "-",
                "possible_values": "\"MD5\", \"SHA-256\" or \"SHA-512\"",
                "enum": [
                  "MD5, SHA-256",
                  "SHA-512"
                ]
              }
            },
            "required": [
              "Encoding",
              "Hash",
              "Type"
            ]
          },
          "RoleId": {
            "type": "String",
            "description": "User Certificate Id of the linked role.",
            "format": "-",
            "default_value": "-",
            "possible_values": "valid \"User.Roles.{RoleId}\" object"
          },
          "SerialNumber": {
            "type": "String",
            "description": "User Certificate serial number.",
            "format": "-",
            "default_value": "-",
            "possible_values": "-"
          },
          "Subject": {
            "type": "object",
            "properties": {
              "CommonName": {
                "type": "String",
                "description": "User Certificate subject common name",
                "format": "-",
                "default_value": "-",
                "possible_values": "-"
              },
              "Country": {
                "type": "String",
                "description": "User Certificate subject country",
                "format": "-",
                "default_value": "-",
                "possible_values": "-"
              },
              "Organization": {
                "type": "String",
                "description": "User Certificate subject organization",
                "format": "-",
                "default_value": "-",
                "possible_values": "-"
              }
            },
            "required": [
              "CommonName",
              "Country",
              "Organization"
            ]
          },
          "Valid": {
            "type": "object",
            "properties": {
              "From": {
                "type": "String",
                "description": "User Certificate valid from timestamp.",
                "format": "yyyy-mm-ddThh:mm:ss.nnnnnn+|-hh:mm  (UTC ISO 8601)",
                "default_value": "-",
                "possible_values": "-"
              },
              "To": {
                "type": "String",
                "description": "User Certificate valid till timestamp.",
                "format": "yyyy-mm-ddThh:mm:ss.nnnnnn+|-hh:mm  (UTC ISO 8601)",
                "default_value": "-",
                "possible_values": "-"
              }
            },
            "required": [
              "From",
              "To"
            ]
          },
          "Status": {
            "type": "String",
            "description": "User Certificate operational status.",
            "format": "-",
            "default_value": "-",
            "possible_values": "\"Pending\" (disabled certificate), \"Trusted\" (enabled, valid and trusted by a CA), \"Untrusted\" (enabled, valid but self-signed), \"Expired\" (enabled but valid time has expired)",
            "readOnly": true
          },
          "Timestamp": {
            "type": "object",
            "properties": {
              "Installed": {
                "type": "String",
                "description": "User Certificate instalation timestamp.",
                "format": "yyyy-mm-ddThh:mm:ss.nnnnnn+|-hh:mm  (UTC ISO 8601)",
                "default_value": "-",
                "possible_values": "-",
                "readOnly": true
              },
              "LastUsed": {
                "type": "String",
                "description": "User Certificate last time used timestamp.",
                "format": "yyyy-mm-ddThh:mm:ss.nnnnnn+|-hh:mm  (UTC ISO 8601)",
                "default_value": "-",
                "possible_values": "-"
              }
            },
            "required": []
          }
        },
        "events": {
          "1": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 1, \"Name\": \"USER_CERTIFICATES_ADDED\"}, \"Body\": {\"CertificateId\": \"User.Certificates.0\", \"RoleId\": \"User.Roles.CLI:Admin\"}}"
              }
            },
            "description": "Raised when a new User Certificate is added.",
            "code": "USER_CERTIFICATES_ADDED"
          },
          "2": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 2, \"Name\": \"USER_CERTIFICATES_DELETED\"}, \"Body\": {\"CertificateId\": \"User.Certificates.0\", \"RoleId\": \"User.Roles.CLI:Admin\"}}"
              }
            },
            "description": "Raised when an existing User Certificate is deleted.",
            "code": "USER_CERTIFICATES_DELETED"
          },
          "3": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 3, \"Name\": \"USER_CERTIFICATES_REVOKED\"}, \"Body\": {\"CertificateId\": \"User.Certificates.0\", \"RoleId\": \"User.Roles.CLI:Admin\"}}"
              }
            },
            "description": "Raised when an existing User Certificate is revoked.",
            "code": "USER_CERTIFICATES_REVOKED"
          },
          "4": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 4, \"Name\": \"USER_CERTIFICATES_ENABLED\"}, \"Body\": {\"CertificateId\": \"User.Certificates.0\", \"RoleId\": \"User.Roles.CLI:Admin\"}}"
              }
            },
            "description": "Raised when an existing User Certificate is enabled.",
            "code": "USER_CERTIFICATES_ENABLED"
          },
          "5": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 5, \"Name\": \"USER_CERTIFICATES_DISABLED\"}, \"Body\": {\"CertificateId\": \"User.Certificates.0\", \"RoleId\": \"User.Roles.CLI:Admin\"}}"
              }
            },
            "description": "Raised when an existing User Certificate is disabled.",
            "code": "USER_CERTIFICATES_DISABLED"
          },
          "6": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 6, \"Name\": \"USER_CERTIFICATES_EXPIRED\"}, \"Body\": {\"CertificateId\": \"User.Certificates.0\", \"RoleId\": \"User.Roles.CLI:Admin\"}}"
              }
            },
            "description": "Raised when the User Certificate expires.",
            "code": "USER_CERTIFICATES_EXPIRED"
          }
        },
        "example": {}
      }
    }
  }
}