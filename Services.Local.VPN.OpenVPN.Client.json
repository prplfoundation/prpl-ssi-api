{
  "paths": {
    "Services.Local.VPN.OpenVPN.Client.Get": {
      "operationId": "Services.Local.VPN.OpenVPN.Client.Get",
      "summary": "Retrieves the status and configuration parameters in regards to the (specified) OpenVPN Client.",
      "tags": [
        "Services.Local.VPN.OpenVPN.Client"
      ],
      "responses": {
        "99": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Enabled\": true, \"Status\": \"Active\", \"Remote\": {\"Address\": \"22.2.4.2\", \"Port\": 1194, \"Protocol\": \"UDP\", \"Username\": \"prplFoundation\", \"Hash\": {\"Fingerprint\": \"21232f297a57a5a743894a0e4a801fc3\", \"Type\": \"MD5\"}}, \"Interfaces\": {\"Outbound\": \"Interfaces.IP.ffth_dhcp\", \"Inbound\": \"Interfaces.IP.br0\"}, \"Statistics\": {\"Bytes\": {\"Transmitted\": 0, \"Received\": 0}, \"Frames\": {\"Transmitted\": 0, \"Received\": 0}}}}",
              "schema": {
                "properties": {
                  "Enabled": {
                    "type": "Boolean",
                    "description": "OpenVPN Client administrative status.",
                    "format": "-",
                    "default_value": "-",
                    "possible_values": "\"true\" or \"false\"",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "readOnly": true
                  },
                  "Interfaces": {
                    "type": "object",
                    "properties": {
                      "Inbound": {
                        "type": "String",
                        "description": "OpenVPN Client inbound interface.",
                        "format": "-",
                        "default_value": "-",
                        "possible_values": "valid \"Interfaces.IP.{InterfaceId}\" object",
                        "readOnly": true
                      },
                      "Outbound": {
                        "type": "String",
                        "description": "OpenVPN Client outbound interface.",
                        "format": "-",
                        "default_value": "-",
                        "possible_values": "valid \"Interfaces.IP.{InterfaceId}\" object",
                        "readOnly": true
                      }
                    },
                    "required": []
                  },
                  "Remote": {
                    "type": "object",
                    "properties": {
                      "Address": {
                        "type": "String",
                        "description": "OpenVPN Client remote address.",
                        "format": "-",
                        "default_value": "-",
                        "possible_values": "FQDN, IPv4 or IPv6 address",
                        "readOnly": true
                      },
                      "Hash": {
                        "type": "object",
                        "properties": {
                          "Fingerprint": {
                            "type": "String",
                            "description": "OpenVPN Client password hash fingerprint.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "-",
                            "readOnly": true
                          },
                          "Type": {
                            "type": "String",
                            "description": "OpenVPN Client password hash type.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "\"MD5\", \"SHA-256\" or \"SHA-512\"",
                            "enum": [
                              "MD5, SHA-256",
                              "SHA-512"
                            ],
                            "readOnly": true
                          }
                        },
                        "required": []
                      },
                      "Port": {
                        "type": "Integer",
                        "description": "OpenVPN Client remote server port.",
                        "format": "-",
                        "default_value": "-",
                        "possible_values": "0-65536",
                        "readOnly": true
                      },
                      "Protocol": {
                        "type": "String",
                        "description": "OpenVPN Client remote server protocol.",
                        "format": "-",
                        "default_value": "-",
                        "possible_values": "\"TCP\" or \"UDP\"",
                        "enum": [
                          "TCP",
                          "UDP"
                        ],
                        "readOnly": true
                      },
                      "Username": {
                        "type": "String",
                        "description": "OpenVPN Client remote server username.",
                        "format": "-",
                        "default_value": "-",
                        "possible_values": "any string with length from 1 up to 64 chars",
                        "readOnly": true
                      }
                    },
                    "required": []
                  },
                  "Statistics": {
                    "type": "object",
                    "properties": {
                      "Bytes": {
                        "type": "object",
                        "properties": {
                          "Received": {
                            "type": "Integer",
                            "description": "OpenVPN Client received bytes count.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": ">= 0",
                            "readOnly": true
                          },
                          "Transmitted": {
                            "type": "Integer",
                            "description": "OpenVPN Client transmitted bytes count.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": ">= 0",
                            "readOnly": true
                          }
                        },
                        "required": []
                      },
                      "Frames": {
                        "type": "object",
                        "properties": {
                          "Received": {
                            "type": "Integer",
                            "description": "OpenVPN Client received frames count.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": ">= 0",
                            "readOnly": true
                          },
                          "Transmitted": {
                            "type": "Integer",
                            "description": "OpenVPN Client transmitted frames count.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": ">= 0",
                            "readOnly": true
                          }
                        },
                        "required": []
                      }
                    },
                    "required": []
                  },
                  "Status": {
                    "type": "String",
                    "description": "OpenVPN Client operational status.",
                    "format": "-",
                    "default_value": "-",
                    "possible_values": "\"Connected\", \"Disconnected\", \"Disabled\", \"Error\"",
                    "readOnly": true
                  }
                },
                "required": []
              }
            }
          },
          "description": "A well-formed call was performed to a valid object with valid arguments."
        },
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_DATA_TYPE_MISMATCH\", \"Description\": \"Unable to process the request because the value provided on the \\u2018Enabled\\u2019 field is not a valid Boolean.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request."
        },
        "ARGUMENT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Enabled' is not a valid argument.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_REQUIRED_MISSING\", \"Description\": \"Unable to process the request because the 'Enabled' field was not provided.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\", \"Description\": \"Unable to process the request because \\u2018Red\\u2019 is not a value supported by the \\u2018Colour\\u2019 field.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request."
        },
        "METHOD_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"METHOD_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Set' is not a valid method\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "IPC Bus",
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request."
        },
        "OBJECT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OBJECT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'prpl.Dummy' is not a valid object.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "IPC Bus",
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request."
        },
        "OK": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window."
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ALREADY_IN_PROGRESS\", \"Description\": \"Unable to process the request because there is a duplicate operation currently in progress.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress."
        },
        "OPERATION_ERROR": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ERROR\", \"Description\": \"Unable to process the request because there is a configuration error.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error."
        },
        "OPERATION_ILLEGAL": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ILLEGAL\", \"Description\": \"Unable to process the request because the 'Stop' procedure can only be invoked after the 'Start' method has been called.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order."
        },
        "OPERATION_PERMISSION_DENIED": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_PERMISSION_DENIED\", \"Description\": \"Unable to process the request because user \\u2018Admin\\u2019 does not have access privileges to invoke the \\u2018Set\\u2019 procedure on object \\u2018prpl.Dummy\\u2019.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "IPC Bus / Remote Protocol Adapter",
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request."
        },
        "OPERATION_TIMEOUT": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_TIMEOUT\", \"Description\": \"The operation has been aborted because the service did not respond within the expected 5 seconds time-frame.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame."
        }
      }
    },
    "Services.Local.VPN.OpenVPN.Client.ResetStatistics": {
      "operationId": "Services.Local.VPN.OpenVPN.Client.ResetStatistics",
      "summary": "Resets the statistics counters of the (specified) OpenVPN Client.",
      "tags": [
        "Services.Local.VPN.OpenVPN.Client"
      ],
      "responses": {
        "99": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}}",
              "schema": {
                "properties": {},
                "required": []
              }
            }
          },
          "description": "A well-formed call was performed to a valid object with valid arguments."
        },
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_DATA_TYPE_MISMATCH\", \"Description\": \"Unable to process the request because the value provided on the \\u2018Enabled\\u2019 field is not a valid Boolean.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request."
        },
        "ARGUMENT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Enabled' is not a valid argument.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_REQUIRED_MISSING\", \"Description\": \"Unable to process the request because the 'Enabled' field was not provided.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\", \"Description\": \"Unable to process the request because \\u2018Red\\u2019 is not a value supported by the \\u2018Colour\\u2019 field.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request."
        },
        "METHOD_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"METHOD_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Set' is not a valid method\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "IPC Bus",
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request."
        },
        "OBJECT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OBJECT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'prpl.Dummy' is not a valid object.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "IPC Bus",
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request."
        },
        "OK": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window."
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ALREADY_IN_PROGRESS\", \"Description\": \"Unable to process the request because there is a duplicate operation currently in progress.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress."
        },
        "OPERATION_ERROR": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ERROR\", \"Description\": \"Unable to process the request because there is a configuration error.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error."
        },
        "OPERATION_ILLEGAL": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ILLEGAL\", \"Description\": \"Unable to process the request because the 'Stop' procedure can only be invoked after the 'Start' method has been called.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order."
        },
        "OPERATION_PERMISSION_DENIED": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_PERMISSION_DENIED\", \"Description\": \"Unable to process the request because user \\u2018Admin\\u2019 does not have access privileges to invoke the \\u2018Set\\u2019 procedure on object \\u2018prpl.Dummy\\u2019.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "IPC Bus / Remote Protocol Adapter",
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request."
        },
        "OPERATION_TIMEOUT": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_TIMEOUT\", \"Description\": \"The operation has been aborted because the service did not respond within the expected 5 seconds time-frame.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame."
        }
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {},
              "required": []
            },
            "example": ""
          }
        }
      }
    },
    "Services.Local.VPN.OpenVPN.Client.Set": {
      "operationId": "Services.Local.VPN.OpenVPN.Client.Set",
      "summary": "Modifies the status and configuration parameters of the (specified) OpenVPN Client.",
      "tags": [
        "Services.Local.VPN.OpenVPN.Client"
      ],
      "responses": {
        "99": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}}",
              "schema": {
                "properties": {},
                "required": []
              }
            }
          },
          "description": "A well-formed call was performed to a valid object with valid arguments."
        },
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_DATA_TYPE_MISMATCH\", \"Description\": \"Unable to process the request because the value provided on the \\u2018Enabled\\u2019 field is not a valid Boolean.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request."
        },
        "ARGUMENT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Enabled' is not a valid argument.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_REQUIRED_MISSING\", \"Description\": \"Unable to process the request because the 'Enabled' field was not provided.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request."
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\", \"Description\": \"Unable to process the request because \\u2018Red\\u2019 is not a value supported by the \\u2018Colour\\u2019 field.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request."
        },
        "METHOD_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"METHOD_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Set' is not a valid method\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "IPC Bus",
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request."
        },
        "OBJECT_NOT_FOUND": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OBJECT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'prpl.Dummy' is not a valid object.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "IPC Bus",
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request."
        },
        "OK": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": 0, \"Name\": \"Guest\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window."
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ALREADY_IN_PROGRESS\", \"Description\": \"Unable to process the request because there is a duplicate operation currently in progress.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress."
        },
        "OPERATION_ERROR": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ERROR\", \"Description\": \"Unable to process the request because there is a configuration error.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error."
        },
        "OPERATION_ILLEGAL": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ILLEGAL\", \"Description\": \"Unable to process the request because the 'Stop' procedure can only be invoked after the 'Start' method has been called.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order."
        },
        "OPERATION_PERMISSION_DENIED": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_PERMISSION_DENIED\", \"Description\": \"Unable to process the request because user \\u2018Admin\\u2019 does not have access privileges to invoke the \\u2018Set\\u2019 procedure on object \\u2018prpl.Dummy\\u2019.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "IPC Bus / Remote Protocol Adapter",
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request."
        },
        "OPERATION_TIMEOUT": {
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_TIMEOUT\", \"Description\": \"The operation has been aborted because the service did not respond within the expected 5 seconds time-frame.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "raised_by": "Micro-Service",
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame."
        }
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "Enabled": {
                  "type": "Boolean",
                  "description": "OpenVPN Client administrative status.",
                  "format": "-",
                  "default_value": "the existing configuration",
                  "possible_values": "\"true\" or \"false\"",
                  "enum": [
                    "true",
                    "false"
                  ],
                  "writeOnly": true
                },
                "Interfaces": {
                  "type": "object",
                  "properties": {
                    "Inbound": {
                      "type": "String",
                      "description": "OpenVPN Client inbound interface.",
                      "format": "-",
                      "default_value": "the existing configuration",
                      "possible_values": "valid \"Interfaces.IP.{InterfaceId}\" object",
                      "writeOnly": true
                    },
                    "Outbound": {
                      "type": "String",
                      "description": "OpenVPN Client outbound interface.",
                      "format": "-",
                      "default_value": "the existing configuration",
                      "possible_values": "valid \"Interfaces.IP.{InterfaceId}\" object",
                      "writeOnly": true
                    }
                  },
                  "required": []
                },
                "Remote": {
                  "type": "object",
                  "properties": {
                    "Address": {
                      "type": "String",
                      "description": "OpenVPN Client remote address.",
                      "format": "-",
                      "default_value": "the existing configuration",
                      "possible_values": "FQDN, IPv4 or IPv6 address",
                      "writeOnly": true
                    },
                    "Password": {
                      "type": "String",
                      "description": "OpenVPN Client remote server password.",
                      "format": "-",
                      "default_value": "the existing configuration",
                      "possible_values": "any string with length from 1 up to 64 chars",
                      "writeOnly": true
                    },
                    "Port": {
                      "type": "Integer",
                      "description": "OpenVPN Client remote server port.",
                      "format": "-",
                      "default_value": "the existing configuration",
                      "possible_values": "0-65536",
                      "writeOnly": true
                    },
                    "Protocol": {
                      "type": "String",
                      "description": "OpenVPN Client remote server protocol.",
                      "format": "-",
                      "default_value": "the existing configuration",
                      "possible_values": "\"TCP\" or \"UDP\"",
                      "enum": [
                        "TCP",
                        "UDP"
                      ],
                      "writeOnly": true
                    },
                    "Username": {
                      "type": "String",
                      "description": "OpenVPN Client remote server username.",
                      "format": "-",
                      "default_value": "the existing configuration",
                      "possible_values": "any string with length from 1 up to 64 chars",
                      "writeOnly": true
                    }
                  },
                  "required": []
                },
                "Statistics": {
                  "type": "object",
                  "properties": {
                    "Bytes": {
                      "type": "object",
                      "properties": {
                        "Received": {
                          "type": "Integer",
                          "description": "OpenVPN Client received bytes count.",
                          "format": "-",
                          "default_value": "the existing configuration",
                          "possible_values": ">= 0",
                          "writeOnly": true
                        },
                        "Transmitted": {
                          "type": "Integer",
                          "description": "OpenVPN Client transmitted bytes count.",
                          "format": "-",
                          "default_value": "the existing configuration",
                          "possible_values": ">= 0",
                          "writeOnly": true
                        }
                      },
                      "required": []
                    },
                    "Frames": {
                      "type": "object",
                      "properties": {
                        "Received": {
                          "type": "Integer",
                          "description": "OpenVPN Client received frames count.",
                          "format": "-",
                          "default_value": "the existing configuration",
                          "possible_values": ">= 0",
                          "writeOnly": true
                        },
                        "Transmitted": {
                          "type": "Integer",
                          "description": "OpenVPN Client transmitted frames count.",
                          "format": "-",
                          "default_value": "the existing configuration",
                          "possible_values": ">= 0",
                          "writeOnly": true
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                }
              },
              "required": []
            },
            "example": "{\"Enabled\": true, \"Remote\": {\"Address\": \"22.2.4.2\", \"Port\": 1194, \"Protocol\": \"UDP\", \"Username\": \"prplFoundation\", \"Password\": \"abc123\"}, \"Interfaces\": {\"Outbound\": \"Interfaces.IP.ffth_dhcp\", \"Inbound\": \"Interfaces.IP.br0\"}, \"Statistics\": {\"Bytes\": {\"Transmitted\": 0, \"Received\": 0}, \"Frames\": {\"Transmitted\": 0, \"Received\": 0}}}"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ListRequest": {
        "properties": {
          "Limit": {
            "description": "How many items to return at one time (max 200)",
            "required": false,
            "type": "integer",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20,
              "example": {
                "Limit": 10
              }
            }
          },
          "Offset": {
            "description": "Which object index to start with",
            "required": false,
            "type": "integer",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": {
                "Offset": 45
              }
            }
          }
        }
      },
      "Error": {
        "required": [
          "code",
          "name"
        ],
        "properties": {
          "header": {
            "properties": {
              "code": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "Services.Local.VPN.OpenVPN.Client": {
        "description": "Services.Local.VPN.OpenVPN.Client Object",
        "id": "Services.Local.VPN.OpenVPN.Client",
        "type": "object",
        "required": [],
        "properties": {
          "Enabled": {
            "type": "Boolean",
            "description": "OpenVPN Client administrative status.",
            "format": "-",
            "default_value": "-",
            "possible_values": "\"true\" or \"false\"",
            "enum": [
              "true",
              "false"
            ]
          },
          "Interfaces": {
            "type": "object",
            "properties": {
              "Inbound": {
                "type": "String",
                "description": "OpenVPN Client inbound interface.",
                "format": "-",
                "default_value": "-",
                "possible_values": "valid \"Interfaces.IP.{InterfaceId}\" object"
              },
              "Outbound": {
                "type": "String",
                "description": "OpenVPN Client outbound interface.",
                "format": "-",
                "default_value": "-",
                "possible_values": "valid \"Interfaces.IP.{InterfaceId}\" object"
              }
            },
            "required": []
          },
          "Remote": {
            "type": "object",
            "properties": {
              "Address": {
                "type": "String",
                "description": "OpenVPN Client remote address.",
                "format": "-",
                "default_value": "-",
                "possible_values": "FQDN, IPv4 or IPv6 address"
              },
              "Hash": {
                "type": "object",
                "properties": {
                  "Fingerprint": {
                    "type": "String",
                    "description": "OpenVPN Client password hash fingerprint.",
                    "format": "-",
                    "default_value": "-",
                    "possible_values": "-",
                    "readOnly": true
                  },
                  "Type": {
                    "type": "String",
                    "description": "OpenVPN Client password hash type.",
                    "format": "-",
                    "default_value": "-",
                    "possible_values": "\"MD5\", \"SHA-256\" or \"SHA-512\"",
                    "enum": [
                      "MD5, SHA-256",
                      "SHA-512"
                    ],
                    "readOnly": true
                  }
                },
                "required": []
              },
              "Port": {
                "type": "Integer",
                "description": "OpenVPN Client remote server port.",
                "format": "-",
                "default_value": "-",
                "possible_values": "0-65536"
              },
              "Protocol": {
                "type": "String",
                "description": "OpenVPN Client remote server protocol.",
                "format": "-",
                "default_value": "-",
                "possible_values": "\"TCP\" or \"UDP\"",
                "enum": [
                  "TCP",
                  "UDP"
                ]
              },
              "Username": {
                "type": "String",
                "description": "OpenVPN Client remote server username.",
                "format": "-",
                "default_value": "-",
                "possible_values": "any string with length from 1 up to 64 chars"
              },
              "Password": {
                "type": "String",
                "description": "OpenVPN Client remote server password.",
                "format": "-",
                "default_value": "the existing configuration",
                "possible_values": "any string with length from 1 up to 64 chars",
                "writeOnly": true
              }
            },
            "required": []
          },
          "Statistics": {
            "type": "object",
            "properties": {
              "Bytes": {
                "type": "object",
                "properties": {
                  "Received": {
                    "type": "Integer",
                    "description": "OpenVPN Client received bytes count.",
                    "format": "-",
                    "default_value": "-",
                    "possible_values": ">= 0"
                  },
                  "Transmitted": {
                    "type": "Integer",
                    "description": "OpenVPN Client transmitted bytes count.",
                    "format": "-",
                    "default_value": "-",
                    "possible_values": ">= 0"
                  }
                },
                "required": []
              },
              "Frames": {
                "type": "object",
                "properties": {
                  "Received": {
                    "type": "Integer",
                    "description": "OpenVPN Client received frames count.",
                    "format": "-",
                    "default_value": "-",
                    "possible_values": ">= 0"
                  },
                  "Transmitted": {
                    "type": "Integer",
                    "description": "OpenVPN Client transmitted frames count.",
                    "format": "-",
                    "default_value": "-",
                    "possible_values": ">= 0"
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          "Status": {
            "type": "String",
            "description": "OpenVPN Client operational status.",
            "format": "-",
            "default_value": "-",
            "possible_values": "\"Connected\", \"Disconnected\", \"Disabled\", \"Error\"",
            "readOnly": true
          }
        },
        "events": {
          "1": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 1, \"Name\": \"SERVICES_LOCAL_VPN_OPENVPN_CLIENT_CONNECTED\"}}"
              }
            },
            "description": "Raised when a OpenVPN Client connects.",
            "code": "SERVICES_LOCAL_VPN_OPENVPN_CLIENT_CONNECTED"
          },
          "2": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 2, \"Name\": \"SERVICES_LOCAL_VPN_OPENVPN_CLIENT_DISABLED\"}}"
              }
            },
            "description": "Raised when an existing OpenVPN Client is disabled.",
            "code": "SERVICES_LOCAL_VPN_OPENVPN_CLIENT_DISABLED"
          },
          "3": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 3, \"Name\": \"SERVICES_LOCAL_VPN_OPENVPN_CLIENT_DISCONNECTED\"}}"
              }
            },
            "description": "Raised when a OpenVPN Client disconnects.",
            "code": "SERVICES_LOCAL_VPN_OPENVPN_CLIENT_DISCONNECTED"
          },
          "4": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 4, \"Name\": \"SERVICES_LOCAL_VPN_OPENVPN_CLIENT_ENABLED\"}}"
              }
            },
            "description": "Raised when an existing OpenVPN Client is enabled.",
            "code": "SERVICES_LOCAL_VPN_OPENVPN_CLIENT_ENABLED"
          },
          "5": {
            "content": {
              "application/json": {
                "example": "{\"Header\": {\"Code\": 5, \"Name\": \"SERVICES_LOCAL_VPN_OPENVPN_CLIENT_MODIFIED\"}}"
              }
            },
            "description": "Raised when an existing OpenVPN Client is modified.",
            "code": "SERVICES_LOCAL_VPN_OPENVPN_CLIENT_MODIFIED"
          }
        },
        "example": {},
        "layer": 2
      }
    }
  }
}