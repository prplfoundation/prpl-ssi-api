{
  "paths": {
    "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.Install": {
      "operationId": "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.Install",
      "summary": "Installs a new LCM Package.",
      "tags": [
        "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages"
      ],
      "responses": {
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_DATA_TYPE_MISMATCH\", \"Description\": \"Unable to process the request because the value provided on the \\u2018Enabled\\u2019 field is not a valid Boolean.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_NOT_FOUND": {
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Enabled' is not a valid argument.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_REQUIRED_MISSING\", \"Description\": \"Unable to process the request because the 'Enabled' field was not provided.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\", \"Description\": \"Unable to process the request because \\u2018Red\\u2019 is not a value supported by the \\u2018Colour\\u2019 field.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "METHOD_NOT_FOUND": {
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"METHOD_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Set' is not a valid method\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OBJECT_NOT_FOUND": {
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OBJECT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'prpl.Dummy' is not a valid object.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OK": {
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": \"uci\"}}",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Response"
                  },
                  {
                    "properties": {
                      "Body": {
                        "properties": {
                          "Id": {
                            "type": "String",
                            "description": "LCM Package unique identifier.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "-"
                          }
                        },
                        "required": []
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ALREADY_IN_PROGRESS\", \"Description\": \"Unable to process the request because there is a duplicate operation currently in progress.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ERROR": {
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ERROR\", \"Description\": \"Unable to process the request because there is a configuration error.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ILLEGAL": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ILLEGAL\", \"Description\": \"Unable to process the request because the 'Stop' procedure can only be invoked after the 'Start' method has been called.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_PERMISSION_DENIED": {
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request.",
          "raised_by": "IPC Bus / Remote Protocol Adapter",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_PERMISSION_DENIED\", \"Description\": \"Unable to process the request because user \\u2018Admin\\u2019 does not have access privileges to invoke the \\u2018Set\\u2019 procedure on object \\u2018prpl.Dummy\\u2019.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_TIMEOUT": {
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_TIMEOUT\", \"Description\": \"The operation has been aborted because the service did not respond within the expected 5 seconds time-frame.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        }
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "Id": {
                  "type": "String",
                  "description": "LCM Package unique identifier.",
                  "format": "-",
                  "default_value": "-",
                  "possible_values": "-"
                },
                "Source": {
                  "type": "object",
                  "properties": {
                    "Address": {
                      "type": "String",
                      "description": "LCM Package source address.",
                      "format": "-",
                      "default_value": "-",
                      "possible_values": "-",
                      "writeOnly": true
                    },
                    "Credentials": {
                      "type": "object",
                      "properties": {
                        "Password": {
                          "type": "String",
                          "description": "LCM Package authentication password.",
                          "format": "-",
                          "default_value": "null",
                          "possible_values": "any string with length from 1 up to 64 chars",
                          "writeOnly": true
                        },
                        "Username": {
                          "type": "String",
                          "description": "LCM Package authentication username.",
                          "format": "-",
                          "default_value": "null",
                          "possible_values": "any string with length from 1 up to 64 chars",
                          "writeOnly": true
                        }
                      },
                      "required": []
                    },
                    "Port": {
                      "type": "Integer",
                      "description": "LCM Package source port.",
                      "format": "-",
                      "default_value": "80 (HTTP), 443 (HTTPS), 21 (FTP), 22 (SFTP), and null (FS).",
                      "possible_values": "0-65535",
                      "writeOnly": true
                    },
                    "Protocol": {
                      "type": "String",
                      "description": "LCM Package source protocol.",
                      "format": "-",
                      "default_value": "-",
                      "possible_values": "HTTP, HTTPS, FTP, SFTP, FS",
                      "writeOnly": true
                    },
                    "Resource": {
                      "type": "String",
                      "description": "LCM Package source resource.",
                      "format": "-",
                      "default_value": "-",
                      "possible_values": "-",
                      "writeOnly": true
                    }
                  },
                  "required": [
                    "Address",
                    "Protocol",
                    "Resource"
                  ]
                },
                "UUID": {
                  "type": "String",
                  "description": "LCM Package universal unique identifier",
                  "format": "Universally Unique Identifier (UUID) - RFC4122",
                  "default_value": "automaticaly generated unique string",
                  "possible_values": "any string with 32 chars",
                  "writeOnly": true
                }
              },
              "required": []
            },
            "example": "{\"Id\": \"uci\", \"UUID\": \"tOhQEAzEzk9zbf9uljt5OnjKEifP8JvQ\", \"Source\": {\"Protocol\": \"HTTPS\", \"Address\": \"feeds.prpl.org\", \"Port\": \"8080\", \"Resource\": \"uci.ipkg\", \"Credentials\": {\"Username\": \"prpl\", \"Password\": \"foundation\"}}}"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "ExecutionEnvironmentId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) ExecutionEnvironment",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        }
      ]
    },
    "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.List": {
      "operationId": "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.List",
      "summary": "Retrieves a list of LCM Packages.",
      "tags": [
        "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages"
      ],
      "responses": {
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_DATA_TYPE_MISMATCH\", \"Description\": \"Unable to process the request because the value provided on the \\u2018Enabled\\u2019 field is not a valid Boolean.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_NOT_FOUND": {
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Enabled' is not a valid argument.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_REQUIRED_MISSING\", \"Description\": \"Unable to process the request because the 'Enabled' field was not provided.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\", \"Description\": \"Unable to process the request because \\u2018Red\\u2019 is not a value supported by the \\u2018Colour\\u2019 field.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "METHOD_NOT_FOUND": {
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"METHOD_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Set' is not a valid method\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OBJECT_NOT_FOUND": {
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OBJECT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'prpl.Dummy' is not a valid object.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OK": {
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"List\": [{\"Id\": \"e8640310-7164-4b67-87cf-4ba717d0f094\", \"UUID\": \"tOhQEAzEzk9zbf9uljt5OnjKEifP8JvQ\", \"Name\": \"libuci\", \"Description\": \"C library for the Unified Configuration Interface (UCI)\", \"Enabled\": true, \"Source\": {\"Protocol\": \"HTTPS\", \"Address\": \"feeds.prpl.org\", \"Port\": \"8080\", \"Resource\": \"uci.ipkg\"}, \"Section\": \"libs\", \"Vendor\": \"Felix Fietkau\", \"Version\": \"2016-07-04.1-1\", \"Dependencies\": [\"libc\", \"libssp\", \"libubox\"], \"License\": \"LGPL-2.1\", \"Architecture\": \"brcm63xx\", \"Status\": \"Installed\", \"Install\": {\"Timestamp\": \"2018-04-09T20:45:00+01:00\", \"Size\": 16760}}], \"Limit\": 10, \"Offset\": 0}}",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Response"
                  },
                  {
                    "properties": {
                      "Body": {
                        "properties": {
                          "Filters": {
                            "type": "object",
                            "properties": {
                              "Architecture": {
                                "type": "String",
                                "description": "LCM Package architecture filter.",
                                "format": "-",
                                "default_value": "null (do not filter out any entries)",
                                "possible_values": "-"
                              },
                              "Enabled": {
                                "type": "Boolean",
                                "description": "LCM Package administrative status filter.",
                                "format": "-",
                                "default_value": "null (do not filter out any entries)",
                                "possible_values": "-"
                              },
                              "Id": {
                                "type": "String",
                                "description": "LCM Package id filter.",
                                "format": "-",
                                "default_value": "null (do not filter out any entries)",
                                "possible_values": "-"
                              },
                              "License": {
                                "type": "String",
                                "description": "LCM Package license filter.",
                                "format": "-",
                                "default_value": "null (do not filter out any entries)",
                                "possible_values": "-"
                              },
                              "Name": {
                                "type": "String",
                                "description": "LCM Package name filter.",
                                "format": "-",
                                "default_value": "null (do not filter out any entries)",
                                "possible_values": "-"
                              },
                              "Status": {
                                "type": "String",
                                "description": "LCM Package operational status filter.",
                                "format": "-",
                                "default_value": "null (do not filter out any entries)",
                                "possible_values": "\"Installing\", \"Installed\", \"Uninstalling\", \"Retired\", \"Starting\", \"Running\", \"Stopping\", \"Installed\", \"Error\""
                              },
                              "UUID": {
                                "type": "String",
                                "description": "LCM Package universal unique identifier filter.",
                                "format": "-",
                                "default_value": "null (do not filter out any entries)",
                                "possible_values": "any string with 32 chars"
                              },
                              "Vendor": {
                                "type": "String",
                                "description": "LCM Package vendor filter.",
                                "format": "-",
                                "default_value": "null (do not filter out any entries)",
                                "possible_values": "-"
                              },
                              "Version": {
                                "type": "String",
                                "description": "LCM Package version filter.",
                                "format": "-",
                                "default_value": "null (do not filter out any entries)",
                                "possible_values": "-"
                              }
                            },
                            "required": []
                          },
                          "Limit": {
                            "type": "Integer",
                            "description": "LCM Package maximum number of returned entries.",
                            "format": "-",
                            "default_value": "0",
                            "possible_values": ">= 0"
                          },
                          "List": {
                            "type": "List",
                            "description": "LCM Package list of entries.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "-",
                            "readOnly": true
                          },
                          "Offset": {
                            "type": "Integer",
                            "description": "LCM Package list start offset.",
                            "format": "-",
                            "default_value": "0",
                            "possible_values": ">= 0"
                          }
                        },
                        "required": []
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ALREADY_IN_PROGRESS\", \"Description\": \"Unable to process the request because there is a duplicate operation currently in progress.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ERROR": {
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ERROR\", \"Description\": \"Unable to process the request because there is a configuration error.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ILLEGAL": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ILLEGAL\", \"Description\": \"Unable to process the request because the 'Stop' procedure can only be invoked after the 'Start' method has been called.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_PERMISSION_DENIED": {
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request.",
          "raised_by": "IPC Bus / Remote Protocol Adapter",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_PERMISSION_DENIED\", \"Description\": \"Unable to process the request because user \\u2018Admin\\u2019 does not have access privileges to invoke the \\u2018Set\\u2019 procedure on object \\u2018prpl.Dummy\\u2019.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_TIMEOUT": {
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_TIMEOUT\", \"Description\": \"The operation has been aborted because the service did not respond within the expected 5 seconds time-frame.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        }
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "Filters": {
                  "type": "object",
                  "properties": {
                    "Architecture": {
                      "type": "String",
                      "description": "LCM Package architecture filter.",
                      "format": "-",
                      "default_value": "null (do not filter out any entries)",
                      "possible_values": "-"
                    },
                    "Enabled": {
                      "type": "Boolean",
                      "description": "LCM Package administrative status filter.",
                      "format": "-",
                      "default_value": "null (do not filter out any entries)",
                      "possible_values": "-"
                    },
                    "Id": {
                      "type": "String",
                      "description": "LCM Package id filter.",
                      "format": "-",
                      "default_value": "null (do not filter out any entries)",
                      "possible_values": "-"
                    },
                    "License": {
                      "type": "String",
                      "description": "LCM Package license filter.",
                      "format": "-",
                      "default_value": "null (do not filter out any entries)",
                      "possible_values": "-"
                    },
                    "Name": {
                      "type": "String",
                      "description": "LCM Package name filter.",
                      "format": "-",
                      "default_value": "null (do not filter out any entries)",
                      "possible_values": "-"
                    },
                    "Status": {
                      "type": "String",
                      "description": "LCM Package operational status filter.",
                      "format": "-",
                      "default_value": "null (do not filter out any entries)",
                      "possible_values": "\"Installing\", \"Installed\", \"Uninstalling\", \"Retired\", \"Starting\", \"Running\", \"Stopping\", \"Installed\", \"Error\""
                    },
                    "UUID": {
                      "type": "String",
                      "description": "LCM Package universal unique identifier filter.",
                      "format": "-",
                      "default_value": "null (do not filter out any entries)",
                      "possible_values": "any string with 32 chars"
                    },
                    "Vendor": {
                      "type": "String",
                      "description": "LCM Package vendor filter.",
                      "format": "-",
                      "default_value": "null (do not filter out any entries)",
                      "possible_values": "-"
                    },
                    "Version": {
                      "type": "String",
                      "description": "LCM Package version filter.",
                      "format": "-",
                      "default_value": "null (do not filter out any entries)",
                      "possible_values": "-"
                    }
                  },
                  "required": []
                },
                "Limit": {
                  "type": "Integer",
                  "description": "LCM Package maximum number of returned entries.",
                  "format": "-",
                  "default_value": "0",
                  "possible_values": ">= 0"
                },
                "Offset": {
                  "type": "Integer",
                  "description": "LCM Package list start offset.",
                  "format": "-",
                  "default_value": "0",
                  "possible_values": ">= 0"
                }
              },
              "required": []
            },
            "example": "{\"Limit\": 10, \"Offset\": 0, \"Filters\": {\"Id\": \"e8640310-7164-4b67-87cf-4ba717d0f094\", \"UUID\": \"tOhQEAzEzk9zbf9uljt5OnjKEifP8JvQ\", \"Name\": \"libuci\", \"Enabled\": true, \"Vendor\": \"Felix Fietkau\", \"Version\": \"2016-07-04.1-1\", \"License\": \"LGPL-2.1\", \"Architecture\": \"brcm63xx\", \"Status\": \"Installed\"}}"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "ExecutionEnvironmentId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) ExecutionEnvironment",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        }
      ]
    },
    "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}.Delete": {
      "operationId": "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}.Delete",
      "summary": "Deletes the specified LCM Package.",
      "tags": [
        "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}"
      ],
      "responses": {
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_DATA_TYPE_MISMATCH\", \"Description\": \"Unable to process the request because the value provided on the \\u2018Enabled\\u2019 field is not a valid Boolean.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_NOT_FOUND": {
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Enabled' is not a valid argument.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_REQUIRED_MISSING\", \"Description\": \"Unable to process the request because the 'Enabled' field was not provided.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\", \"Description\": \"Unable to process the request because \\u2018Red\\u2019 is not a value supported by the \\u2018Colour\\u2019 field.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "METHOD_NOT_FOUND": {
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"METHOD_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Set' is not a valid method\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OBJECT_NOT_FOUND": {
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OBJECT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'prpl.Dummy' is not a valid object.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OK": {
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}}",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Response"
                  },
                  {
                    "properties": {
                      "Body": {
                        "properties": {},
                        "required": []
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ALREADY_IN_PROGRESS\", \"Description\": \"Unable to process the request because there is a duplicate operation currently in progress.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ERROR": {
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ERROR\", \"Description\": \"Unable to process the request because there is a configuration error.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ILLEGAL": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ILLEGAL\", \"Description\": \"Unable to process the request because the 'Stop' procedure can only be invoked after the 'Start' method has been called.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_PERMISSION_DENIED": {
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request.",
          "raised_by": "IPC Bus / Remote Protocol Adapter",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_PERMISSION_DENIED\", \"Description\": \"Unable to process the request because user \\u2018Admin\\u2019 does not have access privileges to invoke the \\u2018Set\\u2019 procedure on object \\u2018prpl.Dummy\\u2019.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_TIMEOUT": {
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_TIMEOUT\", \"Description\": \"The operation has been aborted because the service did not respond within the expected 5 seconds time-frame.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "ExecutionEnvironmentId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) ExecutionEnvironment",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        },
        {
          "in": "path",
          "name": "PackageId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) Package",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        }
      ]
    },
    "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}.Get": {
      "operationId": "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}.Get",
      "summary": "Retrieves the status and configuration parameters in regards to the specified LCM Package.",
      "tags": [
        "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}"
      ],
      "responses": {
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_DATA_TYPE_MISMATCH\", \"Description\": \"Unable to process the request because the value provided on the \\u2018Enabled\\u2019 field is not a valid Boolean.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_NOT_FOUND": {
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Enabled' is not a valid argument.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_REQUIRED_MISSING\", \"Description\": \"Unable to process the request because the 'Enabled' field was not provided.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\", \"Description\": \"Unable to process the request because \\u2018Red\\u2019 is not a value supported by the \\u2018Colour\\u2019 field.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "METHOD_NOT_FOUND": {
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"METHOD_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Set' is not a valid method\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OBJECT_NOT_FOUND": {
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OBJECT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'prpl.Dummy' is not a valid object.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OK": {
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}, \"Body\": {\"Id\": \"e8640310-7164-4b67-87cf-4ba717d0f094\", \"UUID\": \"tOhQEAzEzk9zbf9uljt5OnjKEifP8JvQ\", \"Name\": \"libuci\", \"Description\": \"C library for the Unified Configuration Interface (UCI)\", \"Enabled\": true, \"Source\": {\"Protocol\": \"HTTPS\", \"Address\": \"feeds.prpl.org\", \"Port\": \"8080\", \"Resource\": \"uci.ipkg\"}, \"Section\": \"libs\", \"Vendor\": \"Felix Fietkau\", \"Version\": \"2016-07-04.1-1\", \"Dependencies\": [\"libc\", \"libssp\", \"libubox\"], \"License\": \"LGPL-2.1\", \"Architecture\": \"brcm63xx\", \"Status\": \"Installed\", \"Install\": {\"Timestamp\": \"2018-04-09T20:45:00+01:00\", \"Size\": 16760}}}",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Response"
                  },
                  {
                    "properties": {
                      "Body": {
                        "properties": {
                          "Architecture": {
                            "type": "String",
                            "description": "LCM Package cpu architecture.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "-",
                            "readOnly": true
                          },
                          "Dependencies": {
                            "type": "List",
                            "description": "LCM Package libraries dependencies list.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "-",
                            "readOnly": true
                          },
                          "Description": {
                            "type": "String",
                            "description": "LCM Package description.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "-",
                            "readOnly": true
                          },
                          "Enabled": {
                            "type": "Boolean",
                            "description": "LCM Package administrative status.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "-",
                            "readOnly": true
                          },
                          "Id": {
                            "type": "String",
                            "description": "LCM Package unique identifier.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "-",
                            "readOnly": true
                          },
                          "Install": {
                            "type": "object",
                            "properties": {
                              "Size": {
                                "type": "Integer",
                                "description": "LCM Package size.",
                                "format": "bits",
                                "default_value": "-",
                                "possible_values": ">= 0",
                                "readOnly": true
                              },
                              "Timestamp": {
                                "type": "Timestamp",
                                "description": "LCM Package instalation timestamp.",
                                "format": "yyyy-mm-ddThh:mm:ss.nnnnnn+|-hh:mm  (UTC ISO 8601)",
                                "default_value": "-",
                                "possible_values": "-",
                                "readOnly": true
                              }
                            },
                            "required": []
                          },
                          "License": {
                            "type": "String",
                            "description": "LCM Package license type.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "-",
                            "readOnly": true
                          },
                          "Name": {
                            "type": "String",
                            "description": "LCM Package name (alias).",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "-",
                            "readOnly": true
                          },
                          "Section": {
                            "type": "String",
                            "description": "LCM Package section.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "-",
                            "readOnly": true
                          },
                          "Source": {
                            "type": "object",
                            "properties": {
                              "Address": {
                                "type": "String",
                                "description": "LCM Package source address.",
                                "format": "-",
                                "default_value": "-",
                                "possible_values": "-",
                                "readOnly": true
                              },
                              "Port": {
                                "type": "Integer",
                                "description": "LCM Package source port.",
                                "format": "-",
                                "default_value": "-",
                                "possible_values": "0-65535",
                                "readOnly": true
                              },
                              "Protocol": {
                                "type": "String",
                                "description": "LCM Package source protocol.",
                                "format": "-",
                                "default_value": "-",
                                "possible_values": "HTTP, HTTPS, FTP, SFTP, FS",
                                "readOnly": true
                              },
                              "Resource": {
                                "type": "String",
                                "description": "LCM Package source resource.",
                                "format": "-",
                                "default_value": "-",
                                "possible_values": "-",
                                "readOnly": true
                              }
                            },
                            "required": []
                          },
                          "Status": {
                            "type": "String",
                            "description": "LCM Package operational status.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "\"Installing\", \"Installed\", \"Uninstalling\", \"Retired\", \"Starting\", \"Running\", \"Stopping\", \"Installed\", \"Error\"",
                            "readOnly": true
                          },
                          "UUID": {
                            "type": "String",
                            "description": "LCM Package universal unique identifier",
                            "format": "Universally Unique Identifier (UUID) - RFC4122",
                            "default_value": "-",
                            "possible_values": "any string with 32 chars",
                            "readOnly": true
                          },
                          "Vendor": {
                            "type": "String",
                            "description": "LCM Package vendor name.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "-",
                            "readOnly": true
                          },
                          "Version": {
                            "type": "String",
                            "description": "LCM Package version or release number.",
                            "format": "-",
                            "default_value": "-",
                            "possible_values": "-",
                            "readOnly": true
                          }
                        },
                        "required": []
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ALREADY_IN_PROGRESS\", \"Description\": \"Unable to process the request because there is a duplicate operation currently in progress.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ERROR": {
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ERROR\", \"Description\": \"Unable to process the request because there is a configuration error.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ILLEGAL": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ILLEGAL\", \"Description\": \"Unable to process the request because the 'Stop' procedure can only be invoked after the 'Start' method has been called.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_PERMISSION_DENIED": {
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request.",
          "raised_by": "IPC Bus / Remote Protocol Adapter",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_PERMISSION_DENIED\", \"Description\": \"Unable to process the request because user \\u2018Admin\\u2019 does not have access privileges to invoke the \\u2018Set\\u2019 procedure on object \\u2018prpl.Dummy\\u2019.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_TIMEOUT": {
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_TIMEOUT\", \"Description\": \"The operation has been aborted because the service did not respond within the expected 5 seconds time-frame.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "ExecutionEnvironmentId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) ExecutionEnvironment",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        },
        {
          "in": "path",
          "name": "PackageId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) Package",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        }
      ]
    },
    "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}.Set": {
      "operationId": "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}.Set",
      "summary": "Modifies the status and configuration parameters of the specified LCM Package.",
      "tags": [
        "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}"
      ],
      "responses": {
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_DATA_TYPE_MISMATCH\", \"Description\": \"Unable to process the request because the value provided on the \\u2018Enabled\\u2019 field is not a valid Boolean.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_NOT_FOUND": {
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Enabled' is not a valid argument.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_REQUIRED_MISSING\", \"Description\": \"Unable to process the request because the 'Enabled' field was not provided.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\", \"Description\": \"Unable to process the request because \\u2018Red\\u2019 is not a value supported by the \\u2018Colour\\u2019 field.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "METHOD_NOT_FOUND": {
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"METHOD_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Set' is not a valid method\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OBJECT_NOT_FOUND": {
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OBJECT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'prpl.Dummy' is not a valid object.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OK": {
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}}",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Response"
                  },
                  {
                    "properties": {
                      "Body": {
                        "properties": {},
                        "required": []
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ALREADY_IN_PROGRESS\", \"Description\": \"Unable to process the request because there is a duplicate operation currently in progress.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ERROR": {
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ERROR\", \"Description\": \"Unable to process the request because there is a configuration error.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ILLEGAL": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ILLEGAL\", \"Description\": \"Unable to process the request because the 'Stop' procedure can only be invoked after the 'Start' method has been called.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_PERMISSION_DENIED": {
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request.",
          "raised_by": "IPC Bus / Remote Protocol Adapter",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_PERMISSION_DENIED\", \"Description\": \"Unable to process the request because user \\u2018Admin\\u2019 does not have access privileges to invoke the \\u2018Set\\u2019 procedure on object \\u2018prpl.Dummy\\u2019.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_TIMEOUT": {
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_TIMEOUT\", \"Description\": \"The operation has been aborted because the service did not respond within the expected 5 seconds time-frame.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        }
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "Description": {
                  "type": "String",
                  "description": "LCM Package description.",
                  "format": "-",
                  "default_value": "-",
                  "possible_values": "-",
                  "writeOnly": true
                },
                "Enabled": {
                  "type": "Boolean",
                  "description": "LCM Package administrative status.",
                  "format": "-",
                  "default_value": "-",
                  "possible_values": "-",
                  "writeOnly": true
                },
                "Name": {
                  "type": "String",
                  "description": "LCM Package name (alias).",
                  "format": "-",
                  "default_value": "-",
                  "possible_values": "-",
                  "writeOnly": true
                }
              },
              "required": []
            },
            "example": "{\"Name\": \"libuci\", \"Description\": \"C library for the Unified Configuration Interface (UCI)\", \"Enabled\": true}"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "ExecutionEnvironmentId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) ExecutionEnvironment",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        },
        {
          "in": "path",
          "name": "PackageId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) Package",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        }
      ]
    },
    "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}.Start": {
      "operationId": "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}.Start",
      "summary": "Starts the specified LCM Package.",
      "tags": [
        "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}"
      ],
      "responses": {
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_DATA_TYPE_MISMATCH\", \"Description\": \"Unable to process the request because the value provided on the \\u2018Enabled\\u2019 field is not a valid Boolean.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_NOT_FOUND": {
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Enabled' is not a valid argument.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_REQUIRED_MISSING\", \"Description\": \"Unable to process the request because the 'Enabled' field was not provided.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\", \"Description\": \"Unable to process the request because \\u2018Red\\u2019 is not a value supported by the \\u2018Colour\\u2019 field.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "METHOD_NOT_FOUND": {
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"METHOD_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Set' is not a valid method\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OBJECT_NOT_FOUND": {
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OBJECT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'prpl.Dummy' is not a valid object.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OK": {
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}}",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Response"
                  },
                  {
                    "properties": {
                      "Body": {
                        "properties": {},
                        "required": []
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ALREADY_IN_PROGRESS\", \"Description\": \"Unable to process the request because there is a duplicate operation currently in progress.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ERROR": {
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ERROR\", \"Description\": \"Unable to process the request because there is a configuration error.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ILLEGAL": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ILLEGAL\", \"Description\": \"Unable to process the request because the 'Stop' procedure can only be invoked after the 'Start' method has been called.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_PERMISSION_DENIED": {
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request.",
          "raised_by": "IPC Bus / Remote Protocol Adapter",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_PERMISSION_DENIED\", \"Description\": \"Unable to process the request because user \\u2018Admin\\u2019 does not have access privileges to invoke the \\u2018Set\\u2019 procedure on object \\u2018prpl.Dummy\\u2019.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_TIMEOUT": {
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_TIMEOUT\", \"Description\": \"The operation has been aborted because the service did not respond within the expected 5 seconds time-frame.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        }
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {},
              "required": []
            },
            "example": ""
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "ExecutionEnvironmentId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) ExecutionEnvironment",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        },
        {
          "in": "path",
          "name": "PackageId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) Package",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        }
      ]
    },
    "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}.Stop": {
      "operationId": "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}.Stop",
      "summary": "Stops the specified LCM Package.",
      "tags": [
        "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages.{PackageId}"
      ],
      "responses": {
        "ARGUMENT_DATA_TYPE_MISMATCH": {
          "description": "A call attempt to a valid object and procedure was performed, however an argument value was provided with an unexpected data type, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_DATA_TYPE_MISMATCH\", \"Description\": \"Unable to process the request because the value provided on the \\u2018Enabled\\u2019 field is not a valid Boolean.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_NOT_FOUND": {
          "description": "A call to a valid object and procedure was performed, however an unrecognized argument was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Enabled' is not a valid argument.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_REQUIRED_MISSING": {
          "description": "A call to a valid object and procedure was performed, however a required argument was not provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_REQUIRED_MISSING\", \"Description\": \"Unable to process the request because the 'Enabled' field was not provided.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "ARGUMENT_VALUE_NOT_SUPPORTED": {
          "description": "A call attempt to a valid object and procedure was performed, however a non-supported argument value was provided, therefore it was not possible to process the request.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"ARGUMENT_VALUE_NOT_SUPPORTED\", \"Description\": \"Unable to process the request because \\u2018Red\\u2019 is not a value supported by the \\u2018Colour\\u2019 field.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "METHOD_NOT_FOUND": {
          "description": "A call to a valid object but non-existing procedure was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"METHOD_NOT_FOUND\", \"Description\": \"Unable to process the request because 'Set' is not a valid method\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OBJECT_NOT_FOUND": {
          "description": "A call to a non-existing object was performed, therefore it was not possible to process the request.",
          "raised_by": "IPC Bus",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OBJECT_NOT_FOUND\", \"Description\": \"Unable to process the request because 'prpl.Dummy' is not a valid object.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OK": {
          "description": "A well-formed request to an authorized resource was performed, and the receiver was able to compute the response within the allowed time-window.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OK\"}}",
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Response"
                  },
                  {
                    "properties": {
                      "Body": {
                        "properties": {},
                        "required": []
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "OPERATION_ALREADY_IN_PROGRESS": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as the required resource was temporarily locked by a different request in progress.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ALREADY_IN_PROGRESS\", \"Description\": \"Unable to process the request because there is a duplicate operation currently in progress.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ERROR": {
          "description": "A well-formed request was performed however, it was not possible to process the request due to an unknown internal error.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ERROR\", \"Description\": \"Unable to process the request because there is a configuration error.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_ILLEGAL": {
          "description": "A well-formed request to an authorized resource was performed, however the operation could not be completed, as it was invoked in the incorrect system state or order.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_ILLEGAL\", \"Description\": \"Unable to process the request because the 'Stop' procedure can only be invoked after the 'Start' method has been called.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_PERMISSION_DENIED": {
          "description": "A well-formed request was performed however, the client did not meet the security conditions required to access the protected resource, therefore it is not possible to process the request.",
          "raised_by": "IPC Bus / Remote Protocol Adapter",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_PERMISSION_DENIED\", \"Description\": \"Unable to process the request because user \\u2018Admin\\u2019 does not have access privileges to invoke the \\u2018Set\\u2019 procedure on object \\u2018prpl.Dummy\\u2019.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        },
        "OPERATION_TIMEOUT": {
          "description": "A well-formed request was performed however, it was not possible to process the response within the allowed time-frame.",
          "raised_by": "Micro-Service",
          "content": {
            "application/json": {
              "example": "{\"Header\": {\"Name\": \"OPERATION_TIMEOUT\", \"Description\": \"The operation has been aborted because the service did not respond within the expected 5 seconds time-frame.\"}}",
              "schema": {
                "$ref": "#/components/schemas/Response"
              }
            }
          }
        }
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {},
              "required": []
            },
            "example": ""
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "ExecutionEnvironmentId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) ExecutionEnvironment",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        },
        {
          "in": "path",
          "name": "PackageId",
          "type": "integer",
          "required": true,
          "description": "ID of a(n) Package",
          "schema": {
            "type": "integer",
            "format": "int32",
            "default": 20,
            "example": {
              "Limit": 10
            }
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "ListRequest": {
        "properties": {
          "Limit": {
            "description": "How many items to return at one time (max 200)",
            "required": false,
            "type": "integer",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20,
              "example": {
                "Limit": 10
              }
            }
          },
          "Offset": {
            "description": "Which object index to start with",
            "required": false,
            "type": "integer",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": {
                "Offset": 45
              }
            }
          }
        }
      },
      "Response": {
        "type": "object",
        "description": "schema for a responses to object methods",
        "oneOf": [
          {
            "properties": {
              "Header": {
                "type": "object",
                "description": "Header object specifying the name of the response type and providing a detailed description in case of an error",
                "properties": {
                  "Name": {
                    "type": "string",
                    "description": "name of the response type",
                    "enum": [
                      "OK"
                    ]
                  }
                },
                "required": [
                  "Name"
                ],
                "additionalProperties": false
              },
              "Body": {
                "type": "object"
              }
            },
            "additionalProperties": false
          },
          {
            "properties": {
              "Header": {
                "type": "object",
                "description": "Header object specifying the name of the response type and providing a detailed description in case of an error",
                "properties": {
                  "Name": {
                    "type": "string",
                    "description": "name of the response type",
                    "enum": [
                      "OK",
                      "OPERATION_ALREADY_IN_PROGRESS",
                      "ARGUMENT_NOT_FOUND",
                      "ARGUMENT_DATA_TYPE_MISMATCH",
                      "OPERATION_TIMEOUT",
                      "METHOD_NOT_FOUND",
                      "OPERATION_ILLEGAL",
                      "OBJECT_NOT_FOUND",
                      "ARGUMENT_REQUIRED_MISSING",
                      "OPERATION_ERROR",
                      "ARGUMENT_VALUE_NOT_SUPPORTED",
                      "OPERATION_PERMISSION_DENIED"
                    ]
                  },
                  "Description": {
                    "type": "string",
                    "description": "A more detailed error message. NOTE: only filled in when the operation returns an error."
                  }
                },
                "required": [
                  "Name",
                  "Description"
                ],
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages": {
        "description": "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages Object",
        "id": "Services.Management.LCM.ExecutionEnvironments.{ExecutionEnvironmentId}.Packages",
        "type": "object",
        "required": [],
        "properties": {
          "Id": {
            "type": "String",
            "description": "LCM Package unique identifier.",
            "format": "-",
            "default_value": "-",
            "possible_values": "-"
          },
          "Source": {
            "type": "object",
            "properties": {
              "Address": {
                "type": "String",
                "description": "LCM Package source address.",
                "format": "-",
                "default_value": "-",
                "possible_values": "-"
              },
              "Credentials": {
                "type": "object",
                "properties": {
                  "Password": {
                    "type": "String",
                    "description": "LCM Package authentication password.",
                    "format": "-",
                    "default_value": "null",
                    "possible_values": "any string with length from 1 up to 64 chars",
                    "writeOnly": true
                  },
                  "Username": {
                    "type": "String",
                    "description": "LCM Package authentication username.",
                    "format": "-",
                    "default_value": "null",
                    "possible_values": "any string with length from 1 up to 64 chars",
                    "writeOnly": true
                  }
                },
                "required": []
              },
              "Port": {
                "type": "Integer",
                "description": "LCM Package source port.",
                "format": "-",
                "default_value": "80 (HTTP), 443 (HTTPS), 21 (FTP), 22 (SFTP), and null (FS).",
                "possible_values": "0-65535"
              },
              "Protocol": {
                "type": "String",
                "description": "LCM Package source protocol.",
                "format": "-",
                "default_value": "-",
                "possible_values": "HTTP, HTTPS, FTP, SFTP, FS"
              },
              "Resource": {
                "type": "String",
                "description": "LCM Package source resource.",
                "format": "-",
                "default_value": "-",
                "possible_values": "-"
              }
            },
            "required": [
              "Address",
              "Protocol",
              "Resource"
            ]
          },
          "UUID": {
            "type": "String",
            "description": "LCM Package universal unique identifier",
            "format": "Universally Unique Identifier (UUID) - RFC4122",
            "default_value": "automaticaly generated unique string",
            "possible_values": "any string with 32 chars"
          },
          "Architecture": {
            "type": "String",
            "description": "LCM Package cpu architecture.",
            "format": "-",
            "default_value": "-",
            "possible_values": "-",
            "readOnly": true
          },
          "Dependencies": {
            "type": "List",
            "description": "LCM Package libraries dependencies list.",
            "format": "-",
            "default_value": "-",
            "possible_values": "-",
            "readOnly": true
          },
          "Description": {
            "type": "String",
            "description": "LCM Package description.",
            "format": "-",
            "default_value": "-",
            "possible_values": "-"
          },
          "Enabled": {
            "type": "Boolean",
            "description": "LCM Package administrative status.",
            "format": "-",
            "default_value": "-",
            "possible_values": "-"
          },
          "Install": {
            "type": "object",
            "properties": {
              "Size": {
                "type": "Integer",
                "description": "LCM Package size.",
                "format": "bits",
                "default_value": "-",
                "possible_values": ">= 0",
                "readOnly": true
              },
              "Timestamp": {
                "type": "Timestamp",
                "description": "LCM Package instalation timestamp.",
                "format": "yyyy-mm-ddThh:mm:ss.nnnnnn+|-hh:mm  (UTC ISO 8601)",
                "default_value": "-",
                "possible_values": "-",
                "readOnly": true
              }
            },
            "required": []
          },
          "License": {
            "type": "String",
            "description": "LCM Package license type.",
            "format": "-",
            "default_value": "-",
            "possible_values": "-",
            "readOnly": true
          },
          "Name": {
            "type": "String",
            "description": "LCM Package name (alias).",
            "format": "-",
            "default_value": "-",
            "possible_values": "-"
          },
          "Section": {
            "type": "String",
            "description": "LCM Package section.",
            "format": "-",
            "default_value": "-",
            "possible_values": "-",
            "readOnly": true
          },
          "Status": {
            "type": "String",
            "description": "LCM Package operational status.",
            "format": "-",
            "default_value": "-",
            "possible_values": "\"Installing\", \"Installed\", \"Uninstalling\", \"Retired\", \"Starting\", \"Running\", \"Stopping\", \"Installed\", \"Error\"",
            "readOnly": true
          },
          "Vendor": {
            "type": "String",
            "description": "LCM Package vendor name.",
            "format": "-",
            "default_value": "-",
            "possible_values": "-",
            "readOnly": true
          },
          "Version": {
            "type": "String",
            "description": "LCM Package version or release number.",
            "format": "-",
            "default_value": "-",
            "possible_values": "-",
            "readOnly": true
          }
        },
        "events": {},
        "example": {},
        "layer": 2
      }
    }
  }
}